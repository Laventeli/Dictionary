package sanakirjaM;
// Generated by ComTest BEGIN
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2017.07.22 02:51:36 // Generated by ComTest
 *
 */
public class SanakirjaTest {



  // Generated by ComTest BEGIN
  /** 
   * testLisaa50 
   * @throws SailoException when error
   */
  @Test
  public void testLisaa50() throws SailoException {    // Sanakirja: 50
    Sanakirja sanakirja = new Sanakirja(); 
    Sana koira1 = new Sana(), koira2 = new Sana(); 
    koira1.rekisteroi(); koira2.rekisteroi(); 
    assertEquals("From: Sanakirja line: 55", 0, sanakirja.getSanojaLkm()); 
    sanakirja.lisaa(koira1); assertEquals("From: Sanakirja line: 56", 1, sanakirja.getSanojaLkm()); 
    sanakirja.lisaa(koira2); assertEquals("From: Sanakirja line: 57", 2, sanakirja.getSanojaLkm()); 
    sanakirja.lisaa(koira1); assertEquals("From: Sanakirja line: 58", 3, sanakirja.getSanojaLkm()); 
    assertEquals("From: Sanakirja line: 59", koira1, sanakirja.annaSana(0)); 
    assertEquals("From: Sanakirja line: 60", koira2, sanakirja.annaSana(1)); 
    assertEquals("From: Sanakirja line: 61", koira1, sanakirja.annaSana(2)); 
    try {
    assertEquals("From: Sanakirja line: 62", koira1, sanakirja.annaSana(3)); 
    fail("Sanakirja: 62 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    sanakirja.lisaa(koira1); assertEquals("From: Sanakirja line: 63", 4, sanakirja.getSanojaLkm()); 
    sanakirja.lisaa(koira1); assertEquals("From: Sanakirja line: 64", 5, sanakirja.getSanojaLkm()); 
    try {
    sanakirja.lisaa(koira1); 
    fail("Sanakirja: 65 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaRekisterit114 */
  @Test
  public void testAnnaRekisterit114() {    // Sanakirja: 114
    Sanakirja sanakirja = new Sanakirja(); 
    Sana koira1 = new Sana(), koira2 = new Sana(), koira3 = new Sana(); 
    koira1.rekisteroi(); koira2.rekisteroi(); koira3.rekisteroi(); 
    int sid1 = koira1.getSid(); 
    int sid2 = koira2.getSid(); 
    Rekisteri rek1 = new Rekisteri(), rek2 = new Rekisteri(), rek3 = new Rekisteri(); 
    int rid1 = rek1.rekisteroi(); 
    int rid2 = rek2.rekisteroi(); 
    int rid3 = rek3.rekisteroi(); 
    Relaatio rel1 = new Relaatio(sid1, rid1); 
    Relaatio rel2 = new Relaatio(sid1, rid2); 
    Relaatio rel3 = new Relaatio(sid2, rid3); 
    sanakirja.lisaa(rel1); 
    sanakirja.lisaa(rel2); 
    sanakirja.lisaa(rel3); 
    List<Relaatio> loydetyt; 
    loydetyt = sanakirja.annaRekisterit(koira1); 
    assertEquals("From: Sanakirja line: 133", 2, loydetyt.size()); 
    loydetyt = sanakirja.annaRekisterit(koira2); 
    assertEquals("From: Sanakirja line: 135", 1, loydetyt.size()); 
  } // Generated by ComTest END
}